# 测试concurrent futures pool的性能

## Task
给定一个list number_list ，包含1到10。对list中的每一个数字，乘以1+2+3…+10000000的和（这个任务只是为了消耗时间）

## 执行
3种方式计算，比较耗时时间
1. 顺序执行
2. 线程池执行
3. 进程池执行

### 线程池&进程池 max_workers=5 运行结果
```
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
10000000
20000000
30000000
40000000
50000000
60000000
70000000
80000000
90000000
100000000
Sequential execution in 6.861230850219727 seconds
30000000
20000000
40000000
10000000
50000000
60000000
70000000
100000000
90000000
80000000
Thread pool execution in 6.59679388999939 seconds
20000000
10000000
50000000
30000000
40000000
70000000
60000000
80000000
90000000
100000000
Process pool execution in 3.6048617362976074 seconds
```

### 线程池&进程池 max_workers=10 运行结果
```
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
10000000
20000000
30000000
40000000
50000000
60000000
70000000
80000000
90000000
100000000
Sequential execution in 6.633173942565918 seconds
70000000
50000000
20000000
40000000
30000000
60000000
10000000
90000000
100000000
80000000
Thread pool execution in 6.7386109828948975 seconds
20000000
30000000
10000000
90000000
40000000
50000000
70000000
60000000
80000000
100000000
Process pool execution in 3.6250619888305664 seconds
```
## 结论
进程池执行最快，线程池和顺序执行耗时差不多，python线程性能差
